[{"/mnt/c/Users/anuja/Documents/GitHub/CastlePanicFrontend/src/index.tsx":"1","/mnt/c/Users/anuja/Documents/GitHub/CastlePanicFrontend/src/reportWebVitals.ts":"2","/mnt/c/Users/anuja/documents/GitHub/CastlePanicFrontend/src/index.tsx":"3","/mnt/c/Users/anuja/documents/GitHub/CastlePanicFrontend/src/reportWebVitals.ts":"4","/mnt/c/Users/anuja/documents/GitHub/CastlePanicFrontend/src/App.js":"5"},{"size":500,"mtime":1610834264197,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1610834264211,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1610834264197,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":1610834264211,"results":"11","hashOfConfig":"10"},{"size":2472,"mtime":1611445564584,"results":"12","hashOfConfig":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"a1ktfd",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"f8ls5j",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"/mnt/c/Users/anuja/Documents/GitHub/CastlePanicFrontend/src/index.tsx",[],["28","29"],"/mnt/c/Users/anuja/Documents/GitHub/CastlePanicFrontend/src/reportWebVitals.ts",[],"/mnt/c/Users/anuja/documents/GitHub/CastlePanicFrontend/src/index.tsx",[],["30","31"],"/mnt/c/Users/anuja/documents/GitHub/CastlePanicFrontend/src/reportWebVitals.ts",[],["32","33"],"/mnt/c/Users/anuja/documents/GitHub/CastlePanicFrontend/src/App.js",["34"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { Input, Button } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n} from \"react-router-dom\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA9TJMd9dTh-lyy9-crhM6_mTgt73N42kI\",\n  authDomain: \"castlepanic-9082b.firebaseapp.com\",\n  databaseURL: \"https://castlepanic-9082b-default-rtdb.firebaseio.com\",\n  projectId: \"castlepanic-9082b\",\n  storageBucket: \"castlepanic-9082b.appspot.com\",\n  messagingSenderId: \"29298888899\",\n  appId: \"1:29298888899:web:86786636450aaf2998d276\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst database = firebase.database();\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact={true} path=\"/\" children={<MainPage />} />\n        <Route path=\"/:id\" children={<GamePage />} />\n      </Switch>\n    </Router>\n  );\n}\n\nconst MainPage = () => {\n  const gameCode = (Math.random() * 9000 + 1000).toFixed(0);\n  return (\n    <div className=\"App\">\n      This is main page. <Link to={`/${gameCode}`}>{gameCode}</Link>\n    </div>\n  );\n};\n\nconst GamePage = () => {\n  const { id } = useParams();\n  const [username, setUsername] = useState(\n    localStorage.getItem(\"userName\") || \"\"\n  );\n  const gameUsernamesRef = database.ref(`games/${id}/usernames`);\n\n  const [listOfUsers, setListOfUsers] = useState([]);\n\n  useEffect(() => {\n    gameUsernamesRef.on(\"value\", (snapshot) =>\n      setListOfUsers(Object.keys(snapshot.val()))\n    );\n  }, []);\n\n  console.log(listOfUsers);\n  return (\n    <div>\n      {\" \"}\n      Game code is: {id}\n      <div>\n        Username:{\" \"}\n        <Input\n          id=\"userName\"\n          value={username}\n          placeholder=\"Please enter your username here\"\n          onChange={(e) => setUsername(e.target.value)}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            localStorage.setItem(\"userName\", username);\n            console.log(username);\n            gameUsernamesRef.update({ [username]: true });\n          }}\n        >\n          Save\n        </Button>\n      </div>\n      <div>\n        <div>{!listOfUsers.length && \"No Users Present\"}</div>\n        {listOfUsers.map((user) => (\n          <div key={user}> {user} </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n",["35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"37","replacedBy":"41"},{"ruleId":"39","replacedBy":"42"},{"ruleId":"37","replacedBy":"43"},{"ruleId":"39","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":63,"column":6,"nodeType":"47","endLine":63,"endColumn":8,"suggestions":"48"},{"ruleId":"37","replacedBy":"41"},{"ruleId":"39","replacedBy":"42"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],["49"],["50"],["49"],["50"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'gameUsernamesRef'. Either include it or remove the dependency array.","ArrayExpression",["51"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [gameUsernamesRef]",{"range":"54","text":"55"},[1651,1653],"[gameUsernamesRef]"]